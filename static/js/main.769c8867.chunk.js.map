{"version":3,"sources":["images/pokeball.svg","context.tsx","components/layout/globalStyles.tsx","components/layout/Navbar.tsx","components/layout/Layout.tsx","components/pokemon/Preview.tsx","components/pokemon/Search.tsx","components/layout/Index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","Object","objectSpread","pokemonData","payload","Provider","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","children","Component","Consumer","GlobalStyles","createGlobalStyle","_templateObject","Nav","styled","nav","Navbar_templateObject","Navbar","Container","div","Layout_templateObject","Main","main","_templateObject2","Layout","_ref","Fragment","globalStyles","layout_Navbar","Box","Preview_templateObject","Name","Preview_templateObject2","Img","img","_templateObject3","Data","_templateObject4","Preview","style","display","flex","id","str","name","charAt","toUpperCase","slice","src","sprites","front_default","abilities","map","ability","indexOf","height","types","weight","Pokeball","Search_templateObject","Search_templateObject2","H1","h1","Search_templateObject3","Input","input","Search_templateObject4","Btn","button","_templateObject5","Search","pokemonName","findPokemon","e","preventDefault","axios","get","concat","then","res","data","catch","err","console","log","onChange","target","_this2","Search_Box","onSubmit","bind","placeholder","PokeSVG","alt","keys","length","pokemon_Preview","Index","layout_Layout","pokemon_Search","App","context_Provider","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.769c8867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.fb984f67.svg\";","import React from 'react'\nimport axios from 'axios'\n\ninterface Props {}\n\ninterface State {\n  pokemonData: Object\n  dispatch: Function\n}\n\nconst Context = React.createContext<{}>({})\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'SEARCH_POKEMON':\n      return { ...state, pokemonData: action.payload }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends React.Component<{}, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      pokemonData: {},\n      dispatch: (action: any) => this.setState(state => reducer(state, action))\n    }\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n  }\n\n  html,\n  body {\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Nav = styled.nav`\n  background: #ff6666;\n  border-color: #d84a4a;\n  border-style: solid;\n  border-width: 0 1px 4px 1px;\n  color: #ffffff;\n  margin-bottom: 3rem;\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n  text-align: center;\n\n  span {\n    font-size: 2rem;\n  }\n`\n\nconst Navbar: React.StatelessComponent<{}> = () => {\n  return (\n    <Nav>\n      <span>Pokedex</span>\n    </Nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport styled from 'styled-components'\nimport GlobalStyles from './globalStyles'\nimport Navbar from './Navbar'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  // display: flex;\n  // flex-direction: column;\n  // min-height: 100vh;\n\n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n\n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n`\n\nconst Main = styled.main`\n  // flex: 1;\n`\n\nconst Layout: React.StatelessComponent<{}> = ({ children }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <Navbar />\n      <Container>\n        <Main>{children}</Main>\n      </Container>\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Box = styled.div`\n  background-color: #ffffff;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-color: grey;\n  border-radius: 0.25rem;\n  border-width: 1px 1px 4px 1px;\n  margin: 0 1rem 1rem 1rem;\n  padding: 1.25rem;\n  text-align: center;\n`\n\nconst Name = styled(Box)`\n  font-size: 1.2rem;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n`\n\nconst Img = styled.img`\n  height: 10rem;\n`\n\nconst Data = styled(Box)`\n  background-color: #c5283d;\n  border-color: #73000f;\n  color: #ffffff;\n  text-align: left;\n\n  ul {\n    margin-top: -0.8rem;\n  }\n`\n\nconst capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\n\nconst Preview: React.StatelessComponent<{}> = (props: any) => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: '0 0 50%' }}>\n        <Name>\n          #{props.id} Â· {capitalize(props.name)}\n        </Name>\n        <Box>\n          <Img src={props.sprites.front_default} />\n        </Box>\n      </div>\n      <div style={{ flex: '0 0 50%' }}>\n        <Data>\n          <p>Abilities:</p>\n          <ul>\n            {props.abilities.map((ability: any) => (\n              <li key={props.abilities.indexOf(ability)}>\n                {ability.ability.name}\n              </li>\n            ))}\n          </ul>\n\n          <p>Height: {props.height / 10} meters</p>\n\n          <p>Types:</p>\n          <ul>\n            {props.types.map((type: any) => (\n              <li key={props.types.indexOf(type)}>{type.type.name}</li>\n            ))}\n          </ul>\n\n          <p>Weight: {props.weight / 10} kg</p>\n        </Data>\n      </div>\n    </div>\n  )\n}\n\nexport default Preview\n","import React from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport { Consumer } from '../../context'\nimport Preview from './Preview'\n\nimport PokeSVG from '../../images/pokeball.svg'\n\nconst Pokeball = styled.img`\n  height: 50px;\n  vertical-align: middle;\n`\n\nconst Box = styled.div`\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-color: grey;\n  border-radius: 0.25rem;\n  border-width: 1px 1px 4px 1px;\n  margin-bottom: 3rem;\n  padding: 1.25rem;\n  text-align: center;\n`\n\nconst H1 = styled.h1`\n  font-family: 'Titillium Web', sans-serif;\n  font-size: 3rem;\n  font-weight: 300;\n  line-height: 1.2;\n`\n\nconst Input = styled.input`\n  border: 1px solid #ced4da;\n  box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.075);\n  color: #555;\n  font-size: 1.3rem;\n  height: 3.125rem;\n  margin-right: 1rem;\n  padding: 0.4rem 1rem;\n  vertical-align: middle;\n  width: 18rem;\n`\n\nconst Btn = styled.button`\n  background-color: transparent;\n  border-color: transparent;\n`\n\ninterface Props {}\n\ninterface State {\n  pokemonName: string\n}\n\nclass Search extends React.Component<Props, State> {\n  state: State = { pokemonName: '' }\n\n  findPokemon = (dispatch: any, e: any) => {\n    e.preventDefault()\n\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/${this.state.pokemonName}`)\n      .then(res => {\n        dispatch({\n          type: 'SEARCH_POKEMON',\n          payload: res.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  onChange = (e: any) => {\n    this.setState({ pokemonName: e.target.value })\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {(value: any) => {\n          const { dispatch, pokemonData } = value\n          console.log(pokemonData)\n          return (\n            <>\n              <Box>\n                <H1>Search a Pokemon</H1>\n                <form onSubmit={this.findPokemon.bind(this, dispatch)}>\n                  <Input\n                    placeholder=\"Enter Pokemon name or ID\"\n                    value={this.state.pokemonName}\n                    name=\"pokemonName\"\n                    onChange={this.onChange}\n                  />\n                  <Btn type=\"submit\">\n                    <Pokeball src={PokeSVG} alt=\"pokeball svg\" />\n                  </Btn>\n                </form>\n              </Box>\n              {Object.keys(pokemonData).length > 0 && (\n                <Preview {...pokemonData} />\n              )}\n            </>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from './Layout'\nimport Search from '../pokemon/Search'\n\nconst Index: React.StatelessComponent<{}> = () => {\n  return (\n    <>\n      <Layout>\n        <Search />\n      </Layout>\n    </>\n  )\n}\n\nexport default Index\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from './context'\nimport Index from './components/layout/Index'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Index} />\n          </Switch>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}