{"version":3,"sources":["context.tsx","components/layout/globalStyles.tsx","components/layout/Navbar.tsx","components/layout/Layout.tsx","components/layout/Box.tsx","components/pokemon/Preview.tsx","components/pokemon/Autosuggest.tsx","components/pokemon/Search.tsx","components/layout/Index.tsx","components/layout/Spinner.tsx","components/tweets/Tweet.tsx","components/pokemon/Pokemon.tsx","components/layout/Profile.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","pokemonData","payload","pokemonName","Provider","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","children","Component","Consumer","GlobalStyles","createGlobalStyle","_templateObject","Nav","styled","nav","Navbar_templateObject","Navbar","Container","div","Layout_templateObject","Main","main","_templateObject2","Layout","_ref","Fragment","globalStyles","layout_Navbar","Box","Box_templateObject","B","Preview_templateObject","Name","Preview_templateObject2","Img","img","_templateObject3","Data","_templateObject4","ResultArea","_templateObject5","ResultDataArea","_templateObject6","A","Link","_templateObject7","LinkProfile","_templateObject8","capitalize","str","charAt","toUpperCase","slice","Preview","id","name","Preview_Box","src","sprites","front_default","abilities","map","ability","indexOf","height","types","weight","location","pathname","to","concat","theme","container","position","input","width","padding","fontSize","border","borderRadius","inputFocused","outline","inputOpen","borderBottomLeftRadius","borderBottomRightRadius","suggestionsContainer","display","suggestionsContainerOpen","top","backgroundColor","zIndex","suggestionsList","margin","listStyleType","suggestion","cursor","suggestionHighlighted","Autosuggest","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","names","filter","getSuggestionValue","renderSuggestion","onChange","event","newValue","onSuggestionsFetchRequested","_ref2","suggestions","onSuggestionsClearRequested","onSuggestionSelected","e","request","fetchPokemonData","axios","get","then","res","data","catch","err","console","log","onSubmit","preventDefault","target","_this2","pokemon_entries","item","pokemon_species","error","_this3","_this$state","inputProps","placeholder","context","bind","dist_default","Search_templateObject","H1","h1","Search_templateObject2","Search","Search_templateObject3","button","Search_templateObject4","layout_Box","style","pokemon_Autosuggest","keys","pokemon_Preview","assign","Index","layout_Layout","pokemon_Search","css","Spinner","textAlign","react_spinners","size","color","TW","Tweet_templateObject","Tweet","tweets","statuses","id_str","index_es","tweetId","Pokemon_templateObject","Description","Pokemon_templateObject2","Table","table","Pokemon_templateObject3","StatsTweetsArea","Pokemon_templateObject4","StatsTweets","Pokemon_templateObject5","Pokemon","colorBaseState","stat","fontWeight","match","params","pokemonSpecies","desc","msg","find","language","flavor_text","stats","sort","b","localeCompare","colSpan","base_stat","Pokemon_A","className","flavor_text_entries","description","tweets_Tweet","Profile","pokemon_Pokemon","App","BrowserRouter","basename","process","context_Provider","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aad3eca3.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\ninterface Props {}\n\ninterface State {\n  pokemonData: Object\n  pokemonName: string\n  dispatch: Function\n}\n\nconst Context = React.createContext<{}>({})\n\nconst reducer = (state: State, action: any) => {\n  switch (action.type) {\n    case 'SEARCH_POKEMON':\n      return { ...state, pokemonData: action.payload }\n    case 'GET_POKEMON_NAME':\n      return { ...state, pokemonName: action.payload }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      pokemonData: {},\n      pokemonName: '',\n      dispatch: (action: any) => this.setState(state => reducer(state, action))\n    }\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n  }\n\n  html,\n  body {\n    background: #f6f4f3;\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Nav = styled.nav`\n  background: #ff6666;\n  border-color: #d84a4a;\n  border-style: solid;\n  border-width: 0 1px 4px 1px;\n  color: #ffffff;\n  margin-bottom: 3rem;\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n  text-align: center;\n\n  span {\n    font-size: 2rem;\n  }\n`\n\nconst Navbar: React.StatelessComponent<{}> = () => {\n  return (\n    <Nav>\n      <span>Pokedex</span>\n    </Nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport styled from 'styled-components'\nimport GlobalStyles from './globalStyles'\nimport Navbar from './Navbar'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  @media (min-width: 36rem) {\n    max-width: 33.75rem;\n  }\n\n  @media (min-width: 48rem) {\n    max-width: 45rem;\n  }\n\n  @media (min-width: 62rem) {\n    max-width: 60rem;\n  }\n\n  @media (min-width: 75rem) {\n    max-width: 71.25rem;\n  }\n`\n\nconst Main = styled.main`\n  // flex: 1;\n`\n\nconst Layout: React.StatelessComponent<{}> = ({ children }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <Navbar />\n      <Container>\n        <Main>{children}</Main>\n      </Container>\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Box = styled.div`\n  background-color: #ffffff;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-color: grey;\n  border-radius: 0.25rem;\n  border-width: 1px 1px 4px 1px;\n  margin-bottom: 3rem;\n  padding: 1.25rem;\n  text-align: center;\n`\n\nexport default Box\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport B from '../layout/Box'\n\nconst Box = styled(B)`\n  margin: 0 1rem 1rem 1rem;\n`\n\nconst Name = styled(Box)`\n  font-size: 1.2rem;\n\n  &::first-letter {\n    text-transform: capitalize;\n  }\n`\n\nconst Img = styled.img`\n  height: 10rem;\n`\n\nconst Data = styled(Box)`\n  background-color: #c5283d;\n  border-color: #73000f;\n  color: #fff8f0;\n  text-align: left;\n\n  ul {\n    margin-top: -0.8rem;\n  }\n`\n\nconst ResultArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst ResultDataArea = styled.div`\n  flex: 0 0 50%;\n\n  @media (max-width: 36rem) {\n    flex: 1 1 auto;\n  }\n`\n\nconst A = styled(Link)`\n  margin: 1rem auto;\n\n  &:link {\n    text-decoration: none;\n  }\n\n  &:visited {\n    color: inherit;\n    text-decoration: none;\n  }\n`\n\nconst LinkProfile = styled(Box)`\n  background-color: #577590;\n  border-color: #183752;\n  color: #fff8f0;\n  font-size: 1.25rem;\n`\n\nconst capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\n\nconst Preview: React.StatelessComponent<any> = (props: any) => {\n  return (\n    <ResultArea>\n      <ResultDataArea>\n        <Name>\n          #{props.id} · {capitalize(props.name)}\n        </Name>\n        <Box>\n          <Img src={props.sprites.front_default} />\n        </Box>\n      </ResultDataArea>\n\n      <ResultDataArea>\n        <Data>\n          <p>Abilities:</p>\n          <ul>\n            {props.abilities.map((ability: any) => (\n              <li key={props.abilities.indexOf(ability)}>\n                {ability.ability.name}\n              </li>\n            ))}\n          </ul>\n\n          <p>Height: {props.height / 10} meters</p>\n\n          <p>Types:</p>\n          <ul>\n            {props.types.map((type: any) => (\n              <li key={props.types.indexOf(type)}>{type.type.name}</li>\n            ))}\n          </ul>\n\n          <p>Weight: {props.weight / 10} kg</p>\n        </Data>\n      </ResultDataArea>\n      {props.location &&\n        props.location.pathname &&\n        props.location.pathname === '/' && (\n          <A to={`/profile/${props.name}`}>\n            <LinkProfile>Go to {capitalize(props.name)} profile </LinkProfile>\n          </A>\n        )}\n    </ResultArea>\n  )\n}\n\nexport default Preview\n","import React from 'react'\nimport axios from 'axios'\nimport RAS from 'react-autosuggest'\nimport styled from 'styled-components'\n\nimport { Consumer } from '../../context'\n\nconst theme: Object = {\n  container: {\n    position: 'relative'\n  },\n  input: {\n    width: '17rem',\n    height: '3.125rem',\n    padding: '10px 20px',\n    fontSize: '1.25rem',\n    border: '1px solid #aaa',\n    borderRadius: '4px'\n  },\n  inputFocused: {\n    outline: 'none'\n  },\n  inputOpen: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  suggestionsContainer: {\n    display: 'none'\n  },\n  suggestionsContainerOpen: {\n    display: 'block',\n    position: 'absolute',\n    top: 51,\n    width: '17rem',\n    border: '1px solid #aaa',\n    backgroundColor: '#fff',\n    fontSize: '1.25rem',\n    borderBottomLeftRadius: 4,\n    borderBottomRightRadius: 4,\n    zIndex: 2\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none'\n  },\n  suggestion: {\n    cursor: 'pointer',\n    padding: '10px 20px'\n  },\n  suggestionHighlighted: {\n    backgroundColor: '#ddd'\n  }\n}\n\ninterface Props {}\n\ninterface State {\n  value: string\n  suggestions: Array<Object>\n  names: Array<string>\n}\n\nclass Autosuggest extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      names: []\n    }\n  }\n\n  componentDidMount() {\n    axios\n      .get('https://pokeapi.co/api/v2/pokedex/1')\n      .then(res => {\n        const names: Array<string> = res.data.pokemon_entries.map(\n          (item: any) => item.pokemon_species.name\n        )\n        this.setState({\n          suggestions: names,\n          names\n        })\n      })\n      .catch(err => console.error(err))\n  }\n\n  // Teach Autosuggest how to calculate suggestions for any given input value.\n  getSuggestions: any = (value: string) => {\n    const inputValue = value.trim().toLowerCase()\n    const inputLength = inputValue.length\n    const { names } = this.state\n\n    return inputLength === 0\n      ? []\n      : names.filter(\n          (name: any) => name.toLowerCase().slice(0, inputLength) === inputValue\n        )\n  }\n\n  // When suggestion is clicked, Autosuggest needs to populate the input\n  // based on the clicked suggestion. Teach Autosuggest how to calculate the\n  // input value for every given suggestion.\n  getSuggestionValue = (suggestion: any) => suggestion\n\n  // Use your imagination to render suggestions.\n  renderSuggestion = (suggestion: any) => <div>{suggestion}</div>\n\n  onChange = (event: any, { newValue }: any) => {\n    this.setState({\n      value: newValue\n    })\n  }\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }: any) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    })\n  }\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    })\n  }\n\n  onSuggestionSelected = (\n    dispatch: Function,\n    pokemonName: string,\n    e: React.FormEvent<any>,\n    request: RAS.SuggestionSelectedEventData<any>\n  ) => {\n    if (pokemonName !== request.suggestion) {\n      this.fetchPokemonData(dispatch, request.suggestion)\n    }\n\n    dispatch({\n      type: 'GET_POKEMON_NAME',\n      payload: request.suggestion\n    })\n  }\n\n  fetchPokemonData = (dispatch: Function, pokemonName: string) => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)\n      .then(res => {\n        dispatch({\n          type: 'SEARCH_POKEMON',\n          payload: res.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  onSubmit = (dispatch: Function, e: any) => {\n    e.preventDefault()\n\n    this.fetchPokemonData(dispatch, e.target[0].value)\n  }\n\n  render() {\n    const { value, suggestions } = this.state\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: 'Type a pokemon name',\n      value,\n      onChange: this.onChange\n    }\n\n    return (\n      <Consumer>\n        {(context: any) => {\n          // console.log(context)\n          const { dispatch, pokemonName } = context\n          return (\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n              <RAS\n                theme={theme}\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                onSuggestionSelected={this.onSuggestionSelected.bind(\n                  this,\n                  dispatch,\n                  pokemonName\n                )}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n              />\n            </form>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Autosuggest\n","import React from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nimport { Consumer } from '../../context'\nimport Box from '../layout/Box'\nimport Preview from './Preview'\nimport Autosuggest from './Autosuggest'\n\nimport PokeSVG from '../../images/pokeball.svg'\n\nconst Pokeball = styled.img`\n  height: 50px;\n  vertical-align: middle;\n`\n\nconst H1 = styled.h1`\n  font-family: 'Titillium Web', sans-serif;\n  font-size: 3rem;\n  font-weight: 300;\n  line-height: 1.2;\n`\n\nconst Input = styled.input`\n  border: 1px solid #ced4da;\n  box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.075);\n  color: #555;\n  font-size: 1.3rem;\n  height: 3.125rem;\n  margin-right: 1rem;\n  padding: 0.4rem 1rem;\n  vertical-align: middle;\n  width: 18rem;\n`\n\nconst Btn = styled.button`\n  background-color: transparent;\n  border-color: transparent;\n`\n\ninterface Props {}\n\ninterface State {}\n\nclass Search extends React.Component<Props, State> {\n  render() {\n    return (\n      <Consumer>\n        {(value: any) => {\n          const { pokemonData } = value\n          return (\n            <>\n              <Box>\n                <H1>Search a Pokemon</H1>\n                <div style={{ display: 'inline-flex' }}>\n                  <Autosuggest />\n                </div>\n              </Box>\n              {Object.keys(pokemonData).length > 0 && (\n                <Preview {...pokemonData} {...this.props} />\n              )}\n            </>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from './Layout'\nimport Search from '../pokemon/Search'\n\nconst Index: React.StatelessComponent<{}> = (props: any) => {\n  return (\n    <>\n      <Layout>\n        <Search {...props} />\n      </Layout>\n    </>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport { BeatLoader } from 'react-spinners'\n\nconst css: any = {\n  margin: '2rem auto'\n}\n\nexport default () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <BeatLoader size={25} color={'#183059'} css={css} />\n    </div>\n  )\n}\n","import React from 'react'\nimport axios from 'axios'\nimport { TwitterTweetEmbed } from 'react-twitter-embed'\nimport styled from 'styled-components'\n\nimport Spinner from '../layout/Spinner'\nimport Box from '../layout/Box'\n\ninterface State {\n  tweets: Array<Object> | null\n}\n\nconst TW = styled(Box)`\n  height: 35rem;\n  overflow: scroll;\n  padding: 0;\n  width: 13rem;\n\n  @media (max-width: 36rem) {\n    margin: 0 auto;\n    width: 20rem;\n  }\n\n  @media (min-width: 48rem) {\n    margin: 0 auto;\n    width: 19rem;\n  }\n\n  @media (min-width: 62rem) {\n    margin: 0 auto;\n    width: 26rem;\n  }\n`\n\nclass Tweet extends React.Component<any, State> {\n  constructor(props: any) {\n    super(props)\n\n    this.state = { tweets: null }\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://pokedex-api.nayed.now.sh/tweets/${this.props.name}`)\n      .then(res => this.setState({ tweets: res.data.statuses }))\n  }\n\n  render() {\n    const { tweets } = this.state\n    const { name } = this.props\n\n    return tweets !== null ? (\n      <TW>\n        {tweets.map((item: any) => (\n          <div key={item.id_str}>\n            <TwitterTweetEmbed tweetId={item.id_str} />\n          </div>\n        ))}\n      </TW>\n    ) : (\n      <Spinner />\n    )\n  }\n}\n\nexport default Tweet\n","import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Preview from './Preview'\nimport Spinner from '../layout/Spinner'\nimport Box from '../layout/Box'\nimport Tweet from '../tweets/Tweet'\n\ninterface State {\n  name: string\n  data: any\n}\n\nconst A = styled(Link)`\n  background-color: #555;\n  border: 1px solid transparent;\n  border-color: #000;\n  border-radius: 0.25rem;\n  color: #fff;\n  display: inline-block;\n  margin-bottom: 1rem;\n  padding: 0.375rem 0.75rem;\n  text-decoration: none;\n`\n\nconst Description = styled(Box)`\n  text-align: left;\n`\n\nconst Table = styled.table`\n  background: #fff;\n  border: 1px solid grey;\n  border-radius: 0.25rem;\n  border-width: 1px 1px 4px 1px;\n  margin-bottom: 2rem;\n  width: 100%;\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  th,\n  td {\n    border-bottom: 1px solid #dee2e6;\n    padding: 0.75rem;\n  }\n\n  tbody tr td {\n    text-transform: capitalize;\n\n    &:first-child {\n      border-right: 1px solid #dee2e6;\n    }\n    &:last-child {\n      text-align: center;\n    }\n  }\n`\n\nconst StatsTweetsArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst StatsTweets = styled.div`\n  flex: 0 0 50%;\n  padding: 1rem;\n\n  @media (max-width: 36rem) {\n    flex: 1 1 auto;\n  }\n`\n\nclass Pokemon extends React.Component<any, State> {\n  constructor(props: any) {\n    super(props)\n\n    this.state = { name: this.props.match.params.name, data: {} }\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/${this.state.name}`)\n      .then(res => {\n        this.setState({ data: res.data })\n\n        return axios(`https://pokeapi.co/api/v2/pokemon-species/${res.data.id}`)\n      })\n      .then(res => {\n        const { data } = this.state\n        const pokemonSpecies = res.data\n        this.setState({ data: { ...data, ...pokemonSpecies } })\n      })\n      .catch(err => console.log(err))\n  }\n\n  description(desc: Array<Object>) {\n    const msg: any = desc.find((item: any) => item.language.name === 'en')\n    return <Description>{msg.flavor_text}</Description>\n  }\n\n  stats(stats: Array<Object>) {\n    stats.sort((a: any, b: any) => a.stat.name.localeCompare(b.stat.name))\n\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th colSpan={2}>Base Stats</th>\n          </tr>\n        </thead>\n        <tbody>\n          {stats.map((item: any) => (\n            <tr key={stats.indexOf(item)}>\n              <td>{item.stat.name}</td>\n              <td>{this.colorBaseState(item.base_stat)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )\n  }\n\n  colorBaseState = (stat: number) => {\n    switch (true) {\n      case stat < 25:\n        return <span style={{ color: '#1E91D6' }}>{stat}</span>\n      case stat < 50:\n        return <span style={{ color: '#8FC93A' }}>{stat}</span>\n      case stat < 75:\n        return <span style={{ color: '#E4CC37' }}>{stat}</span>\n      case stat < 100:\n        return <span style={{ color: '#E18335' }}>{stat}</span>\n      default:\n        return <span style={{ color: '#c5283d', fontWeight: 700 }}>{stat}</span>\n    }\n  }\n\n  render() {\n    const { data, name } = this.state\n    const center = 'center'\n    if (Object.keys(data).length > 0) {\n      return (\n        <>\n          <A to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\n            Go back\n          </A>\n\n          <Preview {...data} {...this.props} />\n\n          {data.flavor_text_entries &&\n            this.description(data.flavor_text_entries)}\n\n          <StatsTweetsArea>\n            <StatsTweets>{data.stats && this.stats(data.stats)}</StatsTweets>\n            <StatsTweets>\n              <Tweet name={name} />\n            </StatsTweets>\n          </StatsTweetsArea>\n        </>\n      )\n    } else {\n      return <Spinner />\n    }\n  }\n}\n\nexport default Pokemon\n","import React from 'react'\n\nimport Layout from './Layout'\nimport Pokemon from '../pokemon/Pokemon'\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <Layout>\n          <Pokemon {...this.props} />\n        </Layout>\n      </>\n    )\n  }\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from './context'\nimport Index from './components/layout/Index'\nimport Profile from './components/layout/Profile'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Provider>\n          <Switch>\n            <Route exact path=\"/\" component={Index} />\n            <Route exact path=\"/profile/:name\" component={Profile} />\n          </Switch>\n        </Provider>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}